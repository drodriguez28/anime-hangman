{"version":3,"sources":["components/Figure.jsx","components/Header.jsx","components/WrongLetters.jsx","components/Word.jsx","helper/helpers.js","components/Popup.jsx","components/PictureHints.jsx","App.js","reportWebVitals.js","index.js"],"names":["Figure","_ref","errors","wrongLetters","length","react_default","a","createElement","height","width","className","x1","y1","x2","y2","cx","cy","r","Header","Fragment","WrongLetters","map","letter","i","key","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","concat","useEffect","style","display","onClick","id","PictureHints","src","alt","words","Math","floor","random","App","alphabetLetters","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setCorrectLetters","_useState5","_useState6","setWrongLetters","_useState7","_useState8","setShowNotification","handleButtonChange","event","show","currentLetters","toConsumableArray","components_Header","components_PictureHints","components_Figure","components_WrongLetters","components_Word","btn","index","components_Popup","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.727ee838.chunk.js","sourcesContent":["import React from 'react';\n\nconst Figure = ({ wrongLetters }) => {\n    const errors = wrongLetters.length;\n\n    return (\n        <svg height=\"250\" width=\"200\" className=\"figure-container\">\n\n            {/* Rod */}\n            <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n            <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n            <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n            <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n\n            {/* Head */}\n            {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\n            {/* Body */}\n            {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\n\n            {/* Arms */}\n            {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\n            {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\n\n            {/* Legs  */}\n            {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\n            {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\n        </ svg>\n    )\n};\n\nexport default Figure;\n","import React from 'react';\n\nconst Header = () => {\n    return (\n      <>\n      <h1>Hangman</h1>\n      <p>Guess the Anime Charater</p>\n      <p>You have 6 tries to get it ! Good Luck </p>\n      </>\n  )\n};\n\nexport default Header;\n","import React from 'react';\n\nconst WrongLetters = ({wrongLetters}) => {\n    return (\n        <div className=\"wrong-letters-container\">\n            <div>\n                {wrongLetters.length > 0 && <p>Wrong</p>}\n                {wrongLetters\n                    .map((letter, i) => <span key={i}> {letter} </span>)\n                    .reduce((prev, curr) => prev === null ? [curr] : [prev, ',', curr], null)\n                }\n            </div>\n        </ div>\n    )\n};\n\nexport default WrongLetters;\n","import React from 'react';\n\nconst Word = ({ selectedWord, correctLetters }) => {\n    return (\n        <div className=\"word\">\n            {selectedWord.split('').map((letter, i) => {\n                return (\n                    <span className=\"letter\" key={i}>\n                        {correctLetters.includes(letter) ? letter : ''}\n                    </span>\n                )\n            })}\n        </div>\n\n    )\n};\n\nexport default Word;","export function showNotification(setter) {\n    setter(true);\n    setTimeout(()=> {\n        setter(false);\n    }, 2000);\n}\n\nexport function checkWin(correct, wrong, word) {\n    let status = 'win';\n\n    //check for win \n    word.split('').forEach(letter => {\n        if(!correct.includes(letter)) {\n            status = '';\n        }\n    });\n\n\n    //check for loss\n    if(wrong.length === 6 ) status = 'lose';\n\n    return status;\n}","import React, { useEffect } from 'react';\nimport { checkWin } from '../helper/helpers';\n\nconst Popup = ({ correctLetters, wrongLetters, selectedWord, setPlayable, playAgain }) => {\n\n    let finalMessage = '';\n    let finalMessageRevealWord = '';\n    let playable = true;\n\n\n    if (checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {\n        finalMessage = 'Congratulations! You won! 😃 ';\n        playable = false;\n    } else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose') {\n        finalMessage = 'Unfortunately you lost. 😕';\n        finalMessageRevealWord = `...the word was: ${selectedWord}`;\n        playable = false;\n    }\n\n\n    useEffect(() => setPlayable(playable));\n\n    return (\n        <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex'} : {}}>\n            <div className=\"popup\">\n                <h2> {finalMessage}</h2>\n                <h3>{finalMessageRevealWord}</h3>\n                <button onClick = {playAgain} id=\"play-button\">Play Again</button>\n            </div>\n        </div>\n    )\n};\n\nexport default Popup;\n","import React from \"react\";\n\nconst PictureHints = ({ selectedWord }) => {\n  const displayPic = () => {\n    if (selectedWord === \"eren\") {\n      return <img src=\"/images/eren.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"levi\") {\n      return <img src=\"/images/levi.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"naruto\") {\n      return <img src=\"/images/naruto.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"itachi\") {\n      return <img src=\"/images/itachi.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"sasuke\") {\n      return <img src=\"/images/sasuke.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"deku\") {\n      return <img src=\"/images/deku.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"light\") {\n      return <img src=\"/images/light.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"ryuk\") {\n      return <img src=\"/images/ryuk.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"mikasa\") {\n      return <img src=\"/images/mikasa.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"edward\") {\n      return <img src=\"/images/edward.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"meliodas\") {\n      return <img src=\"/images/meliodas.jpg\" alt=\"\" />;\n    }\n\n    if (selectedWord === \"asta\") {\n      return <img src=\"/images/asta.jpg\" alt=\"\" />;\n    }\n    if (selectedWord === \"yuno\") {\n      return <img src=\"/images/yuno.jpg\" alt=\"\" />;\n    }\n\n    if (selectedWord === \"lelouch\") {\n      return <img src=\"/images/lelouch.jpg\" alt=\"\" />;\n    }\n\n    if (selectedWord === \"gon\") {\n      return <img src=\"/images/gon.jpg\" alt=\"\" />;\n    }\n\n    if (selectedWord === \"killua\") {\n      return <img src=\"/images/killua.jpg\" alt=\"\" />;\n    }\n\n    if (selectedWord === \"thorfinn\") {\n      return <img src=\"/images/thorfinn.jpg\" alt=\"\" />;\n    }\n\n    if (selectedWord === \"gojo\") {\n      return <img src=\"/images/gojo.jpg\" alt=\"\" />;\n    }\n\n    if (selectedWord === \"itadori\") {\n      return <img src=\"/images/itadori.jpg\" alt=\"\" />;\n    }\n  };\n\n  return <div>{displayPic()}</div>;\n};\nexport default PictureHints;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Figure from './components/Figure';\nimport Header from './components/Header';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Popup from './components/Popup';\n//import Notification from './components/Notification';\nimport PictureHints from './components/PictureHints';\nimport { showNotification as show } from './helper/helpers';\n\nconst words = ['eren', 'levi', 'naruto', 'itachi', 'sasuke', 'deku', 'light', 'ryuk', 'mikasa', 'edward', 'meliodas', 'asta', 'yuno', 'lelouch', 'gon', 'killua', 'thorfinn', 'gojo', 'itadori'];\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const alphabetLetters = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n\n  const [playable, setPlayable] = useState(true);\n\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  const alphaButtons = () => {\n    return (\n    <div className=\"alphabet-letters-container\">\n      {alphabetLetters.map((btn, index) => (\n        <button\n          key={index}\n          className=\"alphabet-letters\"\n        onClick={() => handleButtonChange(btn)}\n        >\n          {btn}\n        </button>\n      ))}\n    </div>\n    )\n  };\n\n  const handleButtonChange = event => {\n     if (playable) {\n    const letter = event;\n    if (selectedWord.includes(letter)) {\n      if (!correctLetters.includes(letter)) {\n        setCorrectLetters(currentLetters => [...currentLetters, letter]);\n\n      } else {\n        show(setShowNotification);\n      }\n    } else {\n      if (!wrongLetters.includes(letter)) {\n        setWrongLetters(wrongLetters => [...wrongLetters, letter])\n      } else {\n        show(setShowNotification);\n      }\n    }\n     }\n\n  };\n\n  // the use affect allows you to use the keyboard \n\n  // useEffect(() => {\n  //   const handleKeydown = event => {\n  //     const { key, keyCode } = event;\n\n  //     if (playable && keyCode >= 65 && keyCode <= 90) {\n  //       const letter = key.toLowerCase();\n\n  //       if (selectedWord.includes(letter)) {\n  //         if (!correctLetters.includes(letter)) {\n  //           setCorrectLetters(currentLetters => [...currentLetters, letter]);\n\n  //         } else {\n  //           show(setShowNotification);\n  //         }\n  //       } else {\n  //         if (!wrongLetters.includes(letter)) {\n  //           setWrongLetters(wrongLetters => [...wrongLetters, letter])\n  //         } else {\n  //           show(setShowNotification);\n  //         }\n  //       }\n  //     }\n  //   }\n  //   window.addEventListener('keydown', handleKeydown);\n\n  //   return () => window.removeEventListener('keydown', handleKeydown)\n\n  // }, [correctLetters, wrongLetters, playable]);\n\n\n  function playAgain() {\n    setPlayable(true);\n\n    //Empty Array\n\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n\n  return (\n    <>\n      <Header />\n      <PictureHints selectedWord={selectedWord} />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n        {alphaButtons()}\n      </div>\n      <Popup selectedWord={selectedWord} wrongLetters={wrongLetters} correctLetters={correctLetters} setPlayable={setPlayable} playAgain={playAgain} />\n      {/* <Notification showNotification={showNotification} /> */}\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}